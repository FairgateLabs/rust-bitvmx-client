name: 'Test action'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test:
    if: ${{ !contains(github.event.pull_request.title, '[cov]') }}
    runs-on: ubuntu-latest
    steps:    
      - name: Checkout rust-bitvmx-workspace
        uses: actions/checkout@v4
        with:
          repository: FairgateLabs/rust-bitvmx-workspace
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: main
          path: rust-bitvmx-workspace # Store in $GITHUB_WORKSPACE/other-repo
          submodules: true
      
      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            rust-bitvmx-workspace/rust-bitvmx-client/target
            rust-bitvmx-workspace/rust-bitvmx-client/Cargo.lock
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust-bitvmx-workspace/rust-bitvmx-client/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Build project
        run: |
          cd rust-bitvmx-workspace/rust-bitvmx-client
          cargo build --verbose

      - name: Run tests
        run: |
          cd rust-bitvmx-workspace/rust-bitvmx-client
          cargo test --verbose

  test-with-coverage:
    if: ${{ contains(github.event.pull_request.title, '[cov]') }}
    runs-on: ubuntu-latest

    permissions:
        contents: write
        pull-requests: write
        repository-projects: write

    steps:
      - name: Checkout rust-bitvmx-workspace
        uses: actions/checkout@v4
        with:
          repository: FairgateLabs/rust-bitvmx-workspace
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: main
          path: rust-bitvmx-workspace # Store in $GITHUB_WORKSPACE/other-repo
          submodules: true

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '--out Xml --output-dir resources --exclude-files rust-bitvmx-storage-backend/* rust-bitcoin-indexer/* tests/* src/main.rs src/lib.rs --no-fail-fast'

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: resources/cobertura.xml
          badge: true
          format: markdown
          output: both
        
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          ignore_empty: true
          recreate: true        
          path: code-coverage-results.md  
